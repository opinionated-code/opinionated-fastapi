[tool.poetry]
name = "opinionated-fastapi"
version = "0.0.1"
description = "Opinionated FastAPI"
authors = ["dans <dan@lucidhorizons.com.au>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/opinionated-code/opinionated-fastapi"
keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "opinionated" }
]

[tool.poetry.dependencies]
python = "^3.9"
uvicorn = {version = "^0.15.0", extras = ["standard"]}
fastapi = "^0.68.0"
pydantic = "^1.8.2"
gunicorn = "^20.1.0"
typer = "^0.3.2"
sentry-sdk = "^1.3.1"
SQLAlchemy = {version="^1.4.22"}
alembic = "^1.6.5"
dramatiq = {version = "^1.11.0", extras = ["redis", "rabbitmq"]}
APScheduler = "^3.7.0"
sentry-dramatiq = "^0.3.2"

[tool.poetry.dev-dependencies]
mypy = "^0.910"
safety = "^1.10"
pytest = "^6.2"
pytest-cov = "^2.12"
mkdocs = "^1.2.2"
mkdocstrings = "^0.15.2"
mkdocs-material = "^7.2.4"
SQLAlchemy = {version="^1.4.22", extras = ["mypy"]}
black = "^21.7b0"
coverage = {version = "^5.5", extras = ["toml"]}
mkdocs-typer = "^0.0.2"
mkdocs-redirects = "^1.0.3"
mike = "^1.0.1"
mkdocs-git-revision-date-plugin = "^0.3.1"
mkdocs-git-revision-date-localized-plugin = "^0.9.2"
Pygments = "^2.9.0"
types-pytz = "^2021.1.2"
isort = "^5.9.3"

[tool.poetry.scripts]
fastapi-admin = "opinionated.fastapi.commands:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers -r sxX --show-capture=log --cov-report=xml --cov-report=html --cov-report=term-missing:skip-covered --no-cov-on-fail"
testpaths = [ "tests" ]
cache_dir = ".cache/pytest"

[tool.mypy]
python_version = "3.9"
# fixme add custom plugin to run our bootstrap.setup() before loading the other plugins
#plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
#mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"
files = [ "opinionated", "tests" ]
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
namespace_packages = true
explicit_package_bases = true

cache_dir = ".cache/mypy/"


[tool.isort]
profile = "black"
multi_line_output = 3


[tool.black]
target-version = ["py38", "py39"]


[tool.coverage.run]
branch = true
data_file = ".cache/coverage"
omit = [ ".venv/*", "*/tests/*" ]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "TYPE_CHECKING", "raise NotImplementedError"]
